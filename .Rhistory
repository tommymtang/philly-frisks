cmd()
wd()
getwd()
list.files()
setwd()
list.files()
setwd('/Users/tommytang/Documents/Data Science projects/DonorChoose.org Application Screening')
list.files()
submission <- read.csv("sample_submission.csv")
head(submission)
submission$project_is_approved <- 0
head(submission)
write.csv(submission, "init_submit.csv")
init_submit <- read.csv("init_submit.csv")
head(init_submit)
write.csv(submission, "init_submit.csv", row.names = TRUE)
init_submit <- read.csv("init_submit.csv")
head(init_submit)
write.csv(submission, "init_submit.csv", row.names = FALSE)
init_submit <- read.csv("init_submit.csv")
head(init_submit)
source('~/Documents/Data Science projects/DonorChoose.org Application Screening/R scripts/load.R')
str(rejected)
rej_essay_1 = rejected$project_essay_1
write.csv(rej_essay_1, 'Rejected Essays 1')
rej_essay_2 = rejected$project_essay_2
write.csv(rej_essay_2, 'Rejected Essays 2')
rej_essay_3 = rejected$project_essay_3
write.csv(rej_essay_3, 'Rejected Essays 3')
rej_essay_4 = rejected$project_essay_4
write.csv(rej_essay_4, 'Rejected Essays 4')
accepted_essay_1 = accepted$project_essay_1
write.csv(accepted_essay_1, 'Accepted Essay 1s')
accepted_essay_2 = accepted$project_essay_2
write.csv(accepted_essay_2, 'Accepted Essay 2s')
accepted_essay_3 = accepted$project_essay_3
write.csv(accepted_essay_3, 'Accepted Essay 3s')
accepted_essay_4 = accepted$project_essay_4
write.csv(accepted_essay_4, 'Accepted Essay 4s')
which(resources$id == p036502)
which(resources$id == 'p036502')
resources[which(resources$id == 'p036502'),]
str(train)
getwd()
list.files()
setwd('Documents/Data_Science_Projects/philly-frisks/')
lhr <- read.csv('lhr_input')
philly <- read.csv('philly-stops-clean.csv')
point_x <- lhr[:,1]
point_x <- lhr(:,1)
point_x <- lhr(1:end,1)
point_x <- lhr[1:end,1]
point_x <- lhr[:,1]
point_x <- lhr[,1]
point_Y <- lhr[,2]
point_y <- lhr[,2]
success <- lhr[,3]
x <- point_x * 1000
x
max(x)
min(x)
ceil(max(x))
ceiling(max(x))
floor(min(x))
-74958+75274
sum(success)
a = which(is.na(success))
a
p = round(point_x * 1000)
b = unique(p)
length(b)
